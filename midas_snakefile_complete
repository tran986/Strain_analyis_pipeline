###run on 1 directory first before running on all
#snakemake --profile config midas_merge midas_snv_merge --slurm -c20
import tempfile

TMPDIR="/fs/ess/scratch/PAS2276/"
(SMPS, PAIRS) = glob_wildcards("data/processed/bbduk_downstream/diabetesType2_2/{sample}_{pair}.fastq.gz")
SAMPLES = set(list(SMPS))

(PREFIXES, SPECIES, FILENAMES) = glob_wildcards("data/raw/uhgg_catalogue/{prefix}/{species}/{filename}")
SPECIES_UNIQ = set([s for s in SPECIES if s.startswith("MGYG")])

rule midas_coverage:
  threads: 1
  input:
    r1="data/processed/bbduk_downstream/diabetesType2_2/{sample}_1.fastq.gz",
    r2="data/processed/bbduk_downstream/diabetesType2_2/{sample}_2.fastq.gz"
  output: "data/processed/midas_coverage/{sample}/species/species_profile.tsv"
  run:
    shell("""
      midas2 run_species \
             --sample_name {wildcards.sample} \
             -1 {input.r1} \
             -2 {input.r2} \
             --midasdb_name uhgg \
             --midasdb_dir /fs/ess/PAS2276/db/midasdb_uhgg \
             --num_cores {threads} \
             data/processed/midas_coverage
    """)

rule all_coverage:
  input: expand("data/processed/midas_coverage/{sample}/species/species_profile.tsv", sample=SMPS)
  output: "data/processed/midas_coverage/.coverage_done.txt"
  run: shell("touch {output}")

rule sample_manifest:
  output: "data/processed/sample_manifest.tsv"
  run:
    with(open(output[0], 'w')) as fh:
      fh.write("sample_name\tmidas_outdir\n")
      for smp in SAMPLES:
        #fh.write(f"{smp}\tdata/processed/midas_coverage/{smp}\n")
        fh.write(f"{smp}\tdata/processed/midas_coverage/\n")

rule midas_combine:
  input:
    cd="data/processed/midas_coverage/.coverage_done.txt",
    sm="data/processed/sample_manifest.tsv"
  output: directory("data/processed/midas_merged")
  run: shell("midas2 merge_species --samples_list {input.sm} --min_cov 2 {output}")


rule midas_cnv:
  input:
    r1="data/processed/bbduk_downstream/diabetesType2_2/{sample}_1.fastq.gz",
    r2="data/processed/bbduk_downstream/diabetesType2_2/{sample}_2.fastq.gz",
    sp_prof="data/processed/midas_coverage/{sample}/species/species_profile.tsv"
  output: "data/processed/midas_coverage/{sample}/genes/genes_summary.tsv"
  resources: ntasks=8, mem_mb=60000,
  threads: 8
  run:
    shell(""" \
    midas2 run_genes \
      --sample_name {wildcards.sample} \
      -1 {input.r1} \
      -2 {input.r2} \
      --midasdb_name uhgg \
      --midasdb_dir /fs/ess/PAS2276/db/midasdb_uhgg \
      --select_by median_marker_coverage,unique_fraction_covered \
      --select_threshold=2,0.5 \
      --num_cores 8 \
      data/processed/midas_coverage/
    """)

rule all_snv:
  input: expand("data/processed/midas_coverage/{sample}/genes/genes_summary.tsv", sample=SMPS)
  output: "data/processed/midas_coverage/.snv_done.txt"
  run: shell("touch {output}")

rule midas_snv_merge:
  input:
    md="data/processed/midas_coverage/.snv_done.txt",
    sm="data/processed/sample_manifest.tsv"
  output: directory("data/processed/midas_snv_merge/")
  threads: 8
  resources: mem_mb=60000, ntasks=8,
  shell:
    """ \
    midas2 merge_genes \
    --samples_list {input.sm} \
    --midasdb_name uhgg \
    --midasdb_dir /fs/ess/PAS2276/db/midasdb_uhgg \
    --num_cores 8 \
    {output}
  """